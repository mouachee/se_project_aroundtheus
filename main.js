!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_disableButton(){this._buttonEl.classList.add(this._inactiveButtonClass),this._buttonEl.disabled=!0}_enableButton(){this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}toggleButtonState(){this._toggleButtonState()}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._buttonEl=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._form.reset(),this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}},t=class{constructor(e,t,s,r,i){this._name=e.name,this._link=e.link,this._id=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeImage=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_handlePreviewPicture(){this._handleImageClick()}handleLike(e){this.isLiked=e,this._renderLikes()}_renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}handleDelete(){this._element.remove(),this._element=null}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeImage(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handlePreviewPicture()}))}getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._cardImage=this._element.querySelector(".card__image"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardTitle=this._element.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._renderLikes(),this._element}};class s{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._element=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItems(e){this._element.prepend(e)}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal__opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal__opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}var i=class extends r{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form.form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".form__input"),this._submitButton=this._popupForm.querySelector(".modal__button")}close(){this._popupForm.reset(),super.close()}_getInputValue(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValue())}))}setButtonLoading(){this._submitButton.textContent="Saving..."}resetButtonLoading(){this._submitButton.textContent="Save"}};document.querySelector("#card-template").content.firstElementChild;const o={inputSelector:".form__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},n=(document.getElementById("profile__edit-modal"),document.getElementById("profile__edit-button")),a=(document.getElementById("profile-close-button"),document.querySelector(".profile__title")),l=document.querySelector(".profile__description"),d=document.querySelector("#profile-title-input"),c=document.querySelector("#profile-description-input"),h=document.forms["profile-edit-form"],u=(document.getElementById("add-card-modal"),document.forms["add-card-form"]),_=(u.querySelector("#add-card-title-input"),u.querySelector("#add-card-url-input"),document.querySelector("#add__card-button")),p=(document.getElementById("add-card-close-button"),document.getElementById("preview-image-modal")),m=(document.getElementById("preview-image-close-button"),document.querySelector(".cards__list"),p.querySelector(".modal__popup-image"),p.querySelector(".modal__popup-caption"),document.querySelectorAll(".modal"),document.forms["update-avatar-form"]),f=(m.querySelector("#update-avatar-url"),document.querySelector("#profile-avatar-button")),v=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getCardList(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this.checkResponse)}getProfileInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this.checkResponse)}updateProfileInfo(e){let{title:t,description:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this.checkResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this.checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this.checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this.checkResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this.checkResponse)}updateAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this.checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"beff3ef6-54fc-4029-9809-d6cc7f6fad90","Content-Type":"application/json"}});let E;v.getCardList().then((e=>{E=new s({items:e,renderer:e=>E.addItems(P(e))},".cards__list"),E.renderItems()})).catch((e=>{console.error(e)})),v.getProfileInfo().then((e=>{k.setUserInfo({title:e.name,description:e.about}),k.setAvatarImage({avatar:e.avatar})}));const g=new class extends r{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form.form")}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}("#delete-popup-modal");g.setEventListeners();const S=new i("#add-card-modal",(function(e){S.setButtonLoading(),v.addCard({name:e.title,link:e.url}).then((e=>{E.addItems(P(e)),S.close(),I.toggleButtonState()})).catch((e=>{console.error("error add a new card",e)})).finally((()=>{S.resetButtonLoading()}))}));S.setEventListeners();const L=new i("#profile__edit-modal",(function(e){L.setButtonLoading(),v.updateProfileInfo(e).then((e=>{k.setUserInfo({title:e.name,description:e.about}),C.resetValidation(),L.close()})).catch((e=>{console.error("error",e)})).finally((()=>{L.resetButtonLoading()}))}));L.setEventListeners();const b=new i("#update-avatar-modal",(function(e){b.setButtonLoading(),v.updateAvatar(e).then((e=>{k.setAvatarImage({avatar:e.avatar}),B.resetValidation(),b.close()})).catch((e=>{console.error("error updating profile image",e)})).finally((()=>{b.resetButtonLoading()}))}));b.setEventListeners();const k=new class{constructor(e){let{profileNameSelector:t,profileDescriptionSelector:s,avatarSelector:r}=e;this._profileNameEl=t,this._profileDescriptionEl=s,this._profileAvatarEl=document.querySelector(r)}getUserInfo(){return{userProfileName:this._profileNameEl.textContent,userProfileDescription:this._profileDescriptionEl.textContent}}setUserInfo(e){let{title:t,description:s}=e;this._profileNameEl.textContent=t,this._profileDescriptionEl.textContent=s}setAvatarImage(e){let{avatar:t}=e;this._profileAvatarEl.src=t}}({profileNameSelector:a,profileDescriptionSelector:l,avatarSelector:".profile__avatar-image"}),y=new class extends r{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".modal__popup-image"),this._popupCaption=this._popupElement.querySelector(".modal__popup-caption")}open(e){let{link:t,name:s}=e;this._popupImage.src=t,this._popupImage.alt=`Image ${s}`,this._popupCaption.textContent=s,super.open()}}("#preview-image-modal");y.setEventListeners();const C=new e(o,h);C.enableValidation();const I=new e(o,u);I.enableValidation();const B=new e(o,m);function q(e){g.open(e),g.setSubmitAction((()=>{v.deleteCard(e._id).then((()=>{e.handleDelete(),g.close()})).catch((e=>{console.error("error deleting card",e)}))}))}function w(e){return e.isLiked?v.dislikeCard(e._id).then((t=>{e.handleLike(t.isLiked)})).catch((e=>{console.error("Failed to like the card")})):v.likeCard(e._id).then((t=>{e.handleLike(t.isLiked)})).catch((e=>{console.error("Failed to dislike")}))}function P(e){const s=new t(e,"#card-template",(()=>function(e){y.open(e)}(e)),q,w);return s.getView()}B.enableValidation(),n.addEventListener("click",(()=>{const e=k.getUserInfo();d.value=e.userProfileName,c.value=e.userProfileDescription,L.open()})),_.addEventListener("click",(()=>{S.open()})),f.addEventListener("click",(()=>{b.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,